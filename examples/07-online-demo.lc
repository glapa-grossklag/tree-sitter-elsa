let ID   = \x -> x
let ZERO = \f x -> x
let ONE  = \f x -> f x
let TWO  = \f x -> f (f x)
let INCR = \n f x -> f (n f x)

eval alpha_equiv :
  (\x -> x)
  =a> (\y -> y)
  =a> (\z -> z)

eval id_zero :
  ID ZERO
  =d> (\x -> x) (\f x -> x)
  =b> (\f x -> x)
  =d> ZERO

eval succ_one :
  INCR ONE
  =*> \f x -> f (ONE f x)
  =*> \f x -> f (f x)
  =d> TWO

eval succ_one_normal :
  INCR ONE
  =~> TWO
